//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightService.Monitor.LightControl {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/LightService.ControlService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightZone", Namespace="http://schemas.datacontract.org/2004/07/LigtService.Common")]
    [System.SerializableAttribute()]
    public partial class LightZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastSettedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OutputAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OutputAlarmAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SetPointAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SetPointValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputAddress {
            get {
                return this.InputAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.InputAddressField, value) != true)) {
                    this.InputAddressField = value;
                    this.RaisePropertyChanged("InputAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputValue {
            get {
                return this.InputValueField;
            }
            set {
                if ((object.ReferenceEquals(this.InputValueField, value) != true)) {
                    this.InputValueField = value;
                    this.RaisePropertyChanged("InputValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastSettedValue {
            get {
                return this.LastSettedValueField;
            }
            set {
                if ((object.ReferenceEquals(this.LastSettedValueField, value) != true)) {
                    this.LastSettedValueField = value;
                    this.RaisePropertyChanged("LastSettedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] OutputAddresses {
            get {
                return this.OutputAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputAddressesField, value) != true)) {
                    this.OutputAddressesField = value;
                    this.RaisePropertyChanged("OutputAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] OutputAlarmAddresses {
            get {
                return this.OutputAlarmAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputAlarmAddressesField, value) != true)) {
                    this.OutputAlarmAddressesField = value;
                    this.RaisePropertyChanged("OutputAlarmAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SetPointAddress {
            get {
                return this.SetPointAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SetPointAddressField, value) != true)) {
                    this.SetPointAddressField = value;
                    this.RaisePropertyChanged("SetPointAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SetPointValue {
            get {
                return this.SetPointValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SetPointValueField, value) != true)) {
                    this.SetPointValueField = value;
                    this.RaisePropertyChanged("SetPointValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LightControl.IAstoriaLightServiceControl")]
    public interface IAstoriaLightServiceControl {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstoriaLightServiceControl/GetData", ReplyAction="http://tempuri.org/IAstoriaLightServiceControl/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstoriaLightServiceControl/GetData", ReplyAction="http://tempuri.org/IAstoriaLightServiceControl/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstoriaLightServiceControl/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAstoriaLightServiceControl/GetDataUsingDataContractResponse")]
        LightService.Monitor.LightControl.CompositeType GetDataUsingDataContract(LightService.Monitor.LightControl.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstoriaLightServiceControl/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAstoriaLightServiceControl/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<LightService.Monitor.LightControl.CompositeType> GetDataUsingDataContractAsync(LightService.Monitor.LightControl.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstoriaLightServiceControl/UpdateControlledObjects", ReplyAction="http://tempuri.org/IAstoriaLightServiceControl/UpdateControlledObjectsResponse")]
        void UpdateControlledObjects(LightService.Monitor.LightControl.LightZone[] lightZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstoriaLightServiceControl/UpdateControlledObjects", ReplyAction="http://tempuri.org/IAstoriaLightServiceControl/UpdateControlledObjectsResponse")]
        System.Threading.Tasks.Task UpdateControlledObjectsAsync(LightService.Monitor.LightControl.LightZone[] lightZone);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAstoriaLightServiceControlChannel : LightService.Monitor.LightControl.IAstoriaLightServiceControl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AstoriaLightServiceControlClient : System.ServiceModel.ClientBase<LightService.Monitor.LightControl.IAstoriaLightServiceControl>, LightService.Monitor.LightControl.IAstoriaLightServiceControl {
        
        public AstoriaLightServiceControlClient() {
        }
        
        public AstoriaLightServiceControlClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AstoriaLightServiceControlClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AstoriaLightServiceControlClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AstoriaLightServiceControlClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public LightService.Monitor.LightControl.CompositeType GetDataUsingDataContract(LightService.Monitor.LightControl.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<LightService.Monitor.LightControl.CompositeType> GetDataUsingDataContractAsync(LightService.Monitor.LightControl.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void UpdateControlledObjects(LightService.Monitor.LightControl.LightZone[] lightZone) {
            base.Channel.UpdateControlledObjects(lightZone);
        }
        
        public System.Threading.Tasks.Task UpdateControlledObjectsAsync(LightService.Monitor.LightControl.LightZone[] lightZone) {
            return base.Channel.UpdateControlledObjectsAsync(lightZone);
        }
    }
}
